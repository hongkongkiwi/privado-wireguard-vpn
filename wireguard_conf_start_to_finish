#!/bin/bash -u
SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )
CREDS_FILE="${CREDS_FILE:-"creds.env"}"
[ -f "$CREDS_FILE" ] && source "$CREDS_FILE"
PRIVADO_DATA_DIR="${PRIVADO_DATA_DIR:-"$SCRIPT_DIR/data"}"
LOGIN_TOKEN_FILE="${LOGIN_TOKEN:-"$PRIVADO_DATA_DIR/token.json"}"
SERVERS_JSON="${SERVERS_JSON:-"$PRIVADO_DATA_DIR/servers.json"}"
SERVER_NAME="${1-}"
[ -n "$SERVER_NAME" ] || { echo >&2 "ERROR: must pass server name, city or country"; exit 255; }
OUTPUT_FILE="${2-}"
[ -n "$OUTPUT_FILE" ] || { echo >&2 "ERROR: must pass output file"; exit 255; }

if [ ! -f "$SERVERS_JSON" ]; then
  [ -f "$LOGIN_TOKEN_FILE" ] && echo "Found existing login token" || "$SCRIPT_DIR/login" 
  RETCODE=$?; [ "$RETCODE" -eq 0 ] || { echo >&2 "ERROR: failed to login"; exit 99; }
  "$SCRIPT_DIR/get_servers" || { echo >&2 "ERROR: failed to get servers"; exit 100; }
else
  echo "Found existing server list, no need to login"
fi
SERVER_NAME="$("$SCRIPT_DIR/resolve_server_name" "$SERVER_NAME")"
RESULT="$("$SCRIPT_DIR/login_wireguard_server" "$SERVER_NAME")" || { echo >&2 "ERROR: failed to get wireguard ip"; exit 101; }
echo "$RESULT"
WG_INTERFACE_IP="$(echo "$RESULT" | cut -f2 -d"'")"
"$SCRIPT_DIR/gen_wireguard_conf" "$SERVER_NAME" "$WG_INTERFACE_IP" "$OUTPUT_FILE" || { echo >&2 "ERROR: failed to generate conf"; exit 102; }
exit 0
